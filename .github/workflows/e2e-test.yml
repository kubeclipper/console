# 1.setup node env
# 2.setup cypress env
# 3.e2e test
# 4.upload coverage

name: e2e-test

on: [push, pull_request]

# This ensures that previous jobs for the PR are canceled when the PR is updated.
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  cypress-run:
    runs-on: ubuntu-20.04
    # let's make sure our tests pass on Chrome browser
    name: E2E on Chrome
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup node env
        uses: actions/setup-node@v3
        with:
          node-version: 14.17
          cache: 'yarn'
          cache-dependency-path: yarn.lock
      - uses: cypress-io/github-action@v4
        with:
          browser: Chrome 106
          config-file: cypress.config.js
          start: yarn start
          wait-on: 'http://localhost:8089'
          wait-on-timeout: 300
          command: yarn test:e2e
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
      # after the test run completes
      # store videos and any screenshots
      # NOTE: screenshots will be generated only if E2E test failed
      # thus we store screenshots only on failures
      # Alternative: create and commit an empty cypress/screenshots folder
      # to always have something to upload
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-report
          path: cypress/report
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-result
          path: cypress/results
