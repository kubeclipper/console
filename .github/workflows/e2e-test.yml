# 1.setup node env
# 2.make build and deploy all-in-one service
# 3.stop console service ,replace files and restart console service
# 4.run e2e cluster test

name: e2e-test

on: [push, pull_request]
# This ensures that previous jobs for the branch are canceled when the branch is updated. 
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  front-e2e-test:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup node env
        uses: actions/setup-node@v3
        with:
          node-version: 14.17
          cache: 'yarn'
          cache-dependency-path: yarn.lock
      - name: Build
        run: |
            yarn install
            yarn run build:test

      - name: Get branch name
        id: extract_branch
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_BASE_REF})"

      - name: deploy service
        run: |
          current_branch=${{ steps.extract_branch.outputs.branch }} 
          release_version=master
          if [[ "${{ steps.extract_branch.outputs.branch }}" =~ ^release-.* ]]; then
            IFS="-" read -ra items <<< "$(git describe)"
            if [[ ! ${#items[@]} -eq 0 ]]; then
              release_version=${items[0]}
            fi
          fi
          echo current version is ${release_version}
          echo current branch is ${current_branch}
          curl -sfL https://oss.kubeclipper.io/kcctl.sh | sudo KC_VERSION=${current_branch} KC_REGION=cn bash -
          sudo kcctl deploy --pkg https://oss.kubeclipper.io/release/${release_version}/kc-amd64.tar.gz
          sudo mkdir /data/aio-test

      - name: update console files
        run: |
          sudo systemctl stop kc-console
          sudo rm -rf /etc/kc-console/dist
          sudo /bin/cp -rf ./dist /etc/kc-console/
          sudo systemctl start kc-console

      - name: wait kc-service valid
        run: |
          while true
            do
            kcctl login -H http://localhost:80  -u admin -p Thinkbig1   
            if [[ $? -eq 0 ]]; then
                break
            else
                sleep 3
            fi         
            done
      
      - uses: cypress-io/github-action@v4
        with:
          browser: Chrome 106
          config-file: cypress.config.js
          wait-on: 'http://localhost:80'
          wait-on-timeout: 300
          command: yarn test:e2e
      
      # - uses: actions/upload-artifact@v2
      #   if: always()
      #   with:
      #     name: cypress-screenshots
      #     path: cypress/screenshots

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-report
          path: cypress/report
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-result
          path: cypress/results
      # screenshots will be generated only if E2E test failed
      - name: pass or fail
        run: |
          if [ -d "cypress/screenshots" ];then 
          echo e2e-test fail
          exit 110 
          else
          echo e2e-test successfully
          fi